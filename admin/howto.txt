-Website URLs
http://gator-01.appspot.com/
http://gator.life/


######## Installation ########

-Add universe apt repository and update packages list
sudo add-apt-repository universe
sudo apt-get update

-Prerequisites
For cryptography/openssl : sudo apt-get install python-dev libssl-dev libffi-dev
Before installing numpy/gensim, Install optimized blas/lapack implementation : apt-get install libopenblas-dev

-Install git
sudo apt-get install git

-Install pip
sudo apt-get install python-pip

-Install virtualenv
pip install virtualenv

-Install Java 7+ JRE
sudo apt-get install default-jre

-Install phantomJS
Download the binary package from http://phantomjs.org/download.html and add bin folder to PATH.
wget https://bitbucket.org/ariya/phantomjs/downloads/phantomjs-2.1.1-linux-x86_64.tar.bz2
tar xvfj phantomjs-2.1.1-linux-x86_64.tar.bz2
export PATH=$(pwd)/phantomjs-2.1.1-linux-x86_64/bin:$PATH

-Install docker
sudo apt-get install docker.io
Follow instructions on https://www.howtoforge.com/tutorial/docker-installation-and-usage-on-ubuntu-16.04/


######## Pycharm ########

-How to run pylint in Pycharm
http://blog.saturnlaboratories.co.za/archive/2012/09/10/running-pylint-pycharm

-Set environment variable for pycharm configurations
list of start script -> "Edit configurations" -> Default -> Python -> Environment variables
set DATASTORE_HOST and GCLOUD_PROJECT

-Choose virtualenv inside pycharm
File -> Settings -> Project: sources -> Python interpreter -> Add Local -> REPO/global_env/bin/python2.7

-To avoid a pycharm warning related to watches limit
https://confluence.jetbrains.com/display/IDEADEV/Inotify+Watches+Limit

-How to resolve imports between test and prod
http://stackoverflow.com/questions/17969025/unresolved-reference-when-importing-from-sibling-sub-package-with


######## Travis ########

-How to generate an encrypted environment variable
Create it using travis GUI


######## Miscellaneous ########

-For memory profiling
guppy / heapy


######## How to debug gcloud app deploy failure ########

Reference: https://github.com/GoogleCloudPlatform/python-runtime

Docker need to be installed

This procedure allow to generate the docker image used by google to run our app.

- To generate a Dockerfile and a .dockerignore, run the bellow command in src/server
gcloud beta app gen-config --custom

- Build the docker image using
docker build -t "whatever_you_want:whatever_you_want" .

- To be able to run the image locally, two more steps are needed
    - create a service account and generate/download a private json key from : https://console.cloud.google.com/iam-admin/serviceaccounts/project?project=gator-01
    - put the generate json key on src/server/server
    - open the Dockerfile and add the line "ENV GOOGLE_APPLICATION_CREDENTIALS generate_key_name.json" before "CMD gunicorn -b :$PORT main:APP"
    - IMPORTANT: After debugging, delete the generate key (locally and on google cloud console)

- Add the line "ENV PORT 8080" before "CMD gunicorn -b :$PORT main:APP"

- Run the image
docker run -i -p 8080:8080 -t whatever_you_want:whatever_you_want

- The app is then accessible at
http://localhost:8080/
